#!/usr/bin/env python
#
# Copyright (c) rPath, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


import os
import sys

if os.path.dirname(sys.argv[0]) != ".":
    if sys.argv[0][0] == "/":
        fullPath = os.path.dirname(sys.argv[0])
    else:
        fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()

sys.path.insert(0, os.path.dirname(fullPath))

from conary.repository.changeset import parseKey
from conary.repository.filecontainer import FileContainer
from conary.lib.sha1helper import *
from conary.lib import util

f = util.ExtendedFile(sys.argv[1], "r", buffering = False)
c = FileContainer(f)
if len(sys.argv) == 2:
    rc = c.getNextFile()
    while rc:
	(name, tag, f) = rc
        pathId = None
	if len(name) == 16:
	    name = md5ToString(name)
            fileId = ''
        elif len(name) == 36:
            pathId, fileId = parseKey(name)
            name = md5ToString(pathId) + "," + sha1ToString(fileId)

	print "%s (%s) %d" % (name, tag, f.size)
	rc = c.getNextFile()
elif len(sys.argv) == 3:
    name = sys.argv[2]
    if len(name) == 32:
	name = md5FromString(name)
    elif len(name) == 73:
	name = md5FromString(name[0:32]) + sha1FromString(name[33:])

    nf = c.getNextFile()
    while nf:
        (fname, tag, f) = nf
        if fname == name:
            break
        nf = c.getNextFile()

    if not nf:
        if len(name) == 16:
            name = md5ToString(name)
        print "%s not found" % name
        sys.exit(0)

    sys.stdout.write(f.read())
    f.close()
else:
    for file in sys.argv[2:]:
	print "--", file
	f = c.getFile(file)
	sys.stdout.write(f.read())
	print "---"
	f.close()
