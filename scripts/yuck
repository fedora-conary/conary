#!/usr/bin/python2.3
# -*- mode: python -*-
#
# Copyright (c) 2004 Specifix, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.opensource.org/licenses/cpl.php.
#
# This program is distributed in the hope that it will be useful, but
# without any waranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#

""" Compares local packages against the current install label and 
    lists those that are out of date """

import os
import sys
if os.path.dirname(sys.argv[0]):
    if sys.argv[0][0] == "/":
	fullPath = os.path.dirname(sys.argv[0])
    else:
	fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()

sys.path.append(os.path.dirname(fullPath))

import conarycfg
from local import database
import helper
import util
sys.excepthook = util.excepthook

cfg = conarycfg.ConaryConfiguration()

repos = helper.openRepository(cfg.repositoryMap)
db = database.Database(cfg.root, cfg.dbPath)

pkgs = [ x for x in db.iterAllTroveNames() if x.find(':') == -1 ]
pkgs.sort()
versions = repos.getTroveLeavesByLabel(pkgs, cfg.installLabel)

for pkg in pkgs:
    if not versions[pkg]:
	continue
    v = versions[pkg][0]
    lv = db.getTroveVersionList(pkg)[0]
    vt = v.trailingVersion()
    lvt = lv.trailingVersion()
    if (v.branch(),vt.getVersion(),vt.getRelease(),vt.buildCount) != (lv.branch(),lvt.getVersion(),lvt.getRelease(),lvt.buildCount):
	print "%-35s%-25s%-20s" % (pkg, lvt.asString(), vt.asString())
