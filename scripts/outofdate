#!/usr/bin/python2.4
# -*- mode: python -*-
#
# Copyright (c) 2004 Specifix, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.opensource.org/licenses/cpl.php.
#
# This program is distributed in the hope that it will be useful, but
# without any waranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#

import os
import sys
if os.path.dirname(sys.argv[0]) != ".":
    if sys.argv[0][0] == "/":
	fullPath = os.path.dirname(sys.argv[0])
    else:
	fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()

sys.path.append(os.path.dirname(fullPath))

import conarycfg
from lib import util
from repository import netclient
sys.excepthook = util.genExcepthook()

def usage():
    print "Usage: localoutofdate [--missing]"
    return 1

def main(argv):
    listMissing = False
    args = argv[1:]
    for arg in args:
        if arg == '--missing':
            listMissing = True
        else:
            return usage()
        args.remove(arg)

    cfg = conarycfg.ConaryConfiguration()
    repos = netclient.NetworkRepositoryClient(cfg.repositoryMap)
    troves = [ x for x in repos.troveNames(cfg.installLabelPath[0]) ]
    pkgs = [ p for p in troves if p.find(':') == -1 ]
    sources = [ p for p in troves if p.endswith(':source') ]
    versions = repos.getTroveLeavesByLabel(pkgs + sources, cfg.installLabelPath[0])
    pkgs.sort()

    outofdate = getOutOfDate(pkgs, sources, versions)
    if listMissing:
        (missing, missinggroups, missingbootstraps) = getMissing(sources, versions)
        print "Missing BootStraps: ", ' '.join(missingbootstraps)
        print "Missing Groups: ", ' '.join(missinggroups)
        print "Missing Packages: ", ' '.join(missing)
        print ""


    for pkg, builtver, sourcever in outofdate:
        print "%-35s%-25s%-20s" % (pkg, builtver.asString(), sourcever.asString())
        
def getOutOfDate(pkgs, sources, versions):
    outofdate = []
    for pkg in pkgs:
        sourcepkg = pkg + ':source'
        if pkg in versions and sourcepkg in versions: 
            v = versions[pkg][0]
            sv = versions[sourcepkg][0]
            vt = v.trailingRevision()
            svt = sv.trailingRevision()
            if (v.branch(),vt.getVersion(),vt.getRelease()) != (v.branch(),svt.getVersion(),svt.getRelease()):
                    outofdate.append( (pkg, vt, svt))
    return outofdate


                
def getMissing(sources, versions):
    abstract = [ 'cpanpackage', 'gnomepackage' ]
    dead = [ 'srs', 'srs-python', 'viewcvs', 'gnome-vfs-extras',
        'group-cyrus-sasl', 'bootstrap-srs', 'bootstrap-srs-python',
        'gqview', 'imlib', 'tora' ] 
    missing = []
    missinggroups = []
    missingbootstraps = []
    for source in sources:
        pkg = source.split(':')[0]
        if pkg not in versions:
            if pkg not in abstract and pkg not in dead:
                if pkg.startswith('group-'):
                    missinggroups.append(pkg[6:])
                elif pkg.startswith('bootstrap-'):
                    missingbootstraps.append(pkg[10:])
                else:
                    missing.append(pkg)
    return (missing, missinggroups, missingbootstraps)

                
if __name__ == "__main__":
    sys.exit(main(sys.argv))
