#!/usr/bin/python2.3
# -*- mode: python -*-
#
# Copyright (c) 2004 Specifix, Inc.
#
# This program is distributed under the terms of the Common Public License,
# version 1.0. A copy of this license should have been distributed with this
# source file in a file called LICENSE. If it is not present, the license
# is always available at http://www.opensource.org/licenses/cpl.php.
#
# This program is distributed in the hope that it will be useful, but
# without any waranty; without even the implied warranty of merchantability
# or fitness for a particular purpose. See the Common Public License for
# full details.
#

"""
Shows those paths on your local system that are owned by multiple 
components
"""

import os
import sys
if os.path.dirname(sys.argv[0]):
    if sys.argv[0][0] == "/":
	fullPath = os.path.dirname(sys.argv[0])
    else:
	fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()

sys.path.append(os.path.dirname(fullPath))

import conarycfg
from local import database
import util
sys.excepthook = util.excepthook

def main():
    cfg = conarycfg.ConaryConfiguration()
    db = database.Database(cfg.root, cfg.dbPath)
    displayConflicts(db, cfg)

def displayConflicts(db, cfg):
    for (trove1, trove2, path) in iterPathConflicts(db.db):
	print "%-20s  %-20s  %-30s" % (trove1[0], trove2[0], path)	

def iterPathConflicts(sqldb_obj):
    cu = sqldb_obj.db.cursor()
    cu.execute("""SELECT a.instanceId,b.instanceId,a.path 
		  FROM DBTroveFiles AS a, DBTroveFiles AS b
		  WHERE a.path=b.path 
		  AND a.instanceId != b.instanceID AND
		  a.isPresent=1 AND b.isPresent=1 AND
		  a.instanceID <= b.instanceID""")
    for row in cu:
	troveId1 = sqldb_obj.instances.getId(row[0])
	troveId2 = sqldb_obj.instances.getId(row[1])
        yield (troveId1, troveId2, row[2])

main()
