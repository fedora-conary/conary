#!/usr/bin/env python
#
# Copyright (c) rPath, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


"""
Shows those paths on your local system that are owned by multiple 
components
"""

import os
import sys

if os.path.dirname(sys.argv[0]) != ".":
    if sys.argv[0][0] == "/":
        fullPath = os.path.dirname(sys.argv[0])
    else:
        fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()

sys.path.insert(0, os.path.dirname(fullPath))

from conary import conarycfg
from conary.local import database
from conary.lib import util
sys.excepthook = util.genExcepthook()

def main():
    cfg = conarycfg.ConaryConfiguration()
    db = database.Database(cfg.root, cfg.dbPath)
    displayConflicts(db, cfg)

def displayConflicts(db, cfg):
    for (trove1, trove2, path) in iterPathConflicts(db.db):
	print "%-20s  %-20s  %-30s" % (trove1[0], trove2[0], path)	

def iterPathConflicts(sqldb_obj):
    cu = sqldb_obj.db.cursor()
    cu.execute("""SELECT a.instanceId,b.instanceId,a.path 
		  FROM DBTroveFiles AS a, DBTroveFiles AS b
		  WHERE a.path=b.path 
		  AND a.instanceId != b.instanceID AND
		  a.isPresent=1 AND b.isPresent=1 AND
		  a.instanceID <= b.instanceID""")
    for row in cu:
	troveId1 = sqldb_obj.instances.getId(row[0])
	troveId2 = sqldb_obj.instances.getId(row[1])
        yield (troveId1, troveId2, row[2])

main()
