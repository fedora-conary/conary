#!/usr/bin/python
#
# Copyright (c) 2004 Specifix, Inc.
# All rights reserved
#

import os
import sys
import importrpm
import string
import package
import update
import commit
import srscfg
import cook
import util

sys.excepthook = util.excepthook

cfg = srscfg.SrsConfiguration()

pkgDB = cfg.reppath + "/pkgs"
contentsDB = cfg.reppath + "/contents"
util.mkdirChain(pkgDB, contentsDB)

def usage():
    print "usage: srs import <file.rpm>"
    print "       srs pkglist <pkg>"
    print "       srs update  <pkg>"
    print "       srs cook    <first.recipe> <second.recipe> ..."
    sys.exit(0)

def displayPkgs(reppath, packageList):
    for pkgName in packageList:
	if os.path.isdir(reppath + "/pkgs/" + pkgName):
	    files = os.listdir(reppath + "/pkgs/" + pkgName)
	    for sub in files:
		displayPkgs(reppath, [ pkgName + "/" + sub ])
	else:
	    pkgSet = package.PackageSet(reppath, pkgName)
	    l = pkgSet.versionList()
	    for version in l:
		print "/%-39s %s" % (pkgName, version)

if (len(sys.argv) < 2):
    usage()
elif (sys.argv[1] == "import"):
    for file in sys.argv[2:]:
	importrpm.doImport(cfg.reppath, file)
elif (sys.argv[1] == "cook"):
    for file in sys.argv[2:]:
        if file[0] != '/':
            file = "%s/%s" % (os.getcwd(), file)
	cook.cook(cfg, [os.path.dirname(file), cfg.sourcepath], file)
elif (sys.argv[1] == "pkglist"):
    if (len(sys.argv) == 2):
	displayPkgs(cfg.reppath, os.listdir(cfg.reppath + "/pkgs"))
    else:
	displayPkgs(cfg.reppath, sys.argv[2:])
elif (sys.argv[1] == "update"):
    for pkg in sys.argv[2:]:
	update.doUpdate(cfg, cfg.root, pkg, binaries = 1, sources = 1)
elif (sys.argv[1] == "config"):
    if (len(sys.argv) > 2):
	usage()
    else:
	cfg.display()
else:
    usage()
