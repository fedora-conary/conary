#!/usr/bin/python
#
# Copyright (c) 2004 Specifix, Inc.
# All rights reserved
#

import commit
import cook
import os
import srscfg
import sys
import update
import util
import repository
import display

sys.excepthook = util.excepthook

cfg = srscfg.SrsConfiguration()

repos = repository.Repository(cfg.reppath)

def usage():
    print "usage: srs import  <file.rpm>"
    print "       srs pkglist <pkg> <version>"
    print "       srs update  <pkg> <version>"
    print "       srs cook    <first.recipe> <second.recipe> ..."
    sys.exit(0)

if (len(sys.argv) < 2):
    usage()
elif (sys.argv[1] == "import"):
    print "this is broken"
elif (sys.argv[1] == "cook"):
    for file in sys.argv[2:]:
        if file[0] != '/':
            file = "%s/%s" % (os.getcwd(), file)
        # we want to fork here to isolate changes the recipe might make
        # in the environment (such as environment variables)
        pid = os.fork()
        if not pid:
            cook.cook(repos, cfg, file)
        else:
            (id, status) = os.waitpid(pid, 0);
                
elif (sys.argv[1] == "pkglist"):
    if len(sys.argv) >= 2 and len(sys.argv) <= 4:
	args = [repos, cfg] + sys.argv[2:]
	apply(display.displayPkgs, args)
    else:
	usage()
elif (sys.argv[1] == "update"):
    if len(sys.argv) >=3 and len(sys.argv) <= 4:
	args = [repos, cfg] + sys.argv[2:]
	apply(update.update, args)
    else:
	usage()
elif (sys.argv[1] == "config"):
    if (len(sys.argv) > 2):
	usage()
    else:
	cfg.display()
else:
    usage()
