#
# Copyright (c) rPath, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


loadSuperClass('testpackage=testbits.rb.rpath.com@rpl:1')
class ConaryTest(CPackageRecipe, TestPackageRecipe):
    name = 'conary-test'
    version = '1.2'

    # DB (default sqlite)
    Flags.db_pgsql = False

    # Server (default standalone)
    Flags.srv_apache = False
    Flags.srv_apache_cached = False

    # Proxy (default none)
    Flags.proxy_apache = False
    Flags.proxy_standalone = False

    # HTTP Proxy (default off)
    Flags.http_proxy = False

    # IDgen (default 0)
    Flags.idgen_1 = False
    Flags.idgen_3 = False


    # testpackage configuration
    testDir = '.'
    codeDirs = {
        'conary': '%(libdir)s/python2.4/site-packages/conary',
        'conary-policy': '%(prefix)s/lib/conary/policy',
      }

    # test suite to run
    testsuite = "testsuite.py"

    extraEnviron = None

    buildRequires = [
        'apache2-mod_python:lib',
        'apache2-mod_python:python',
        'apache2-prefork:runtime',
        'apache2:runtime',
        'bzr:runtime',
        'cdrkit-cdrtools-compat:runtime',
        'cElementTree:python',
        'cmake:runtime',
        'conary-build:python',
        'conary-policy:lib',
        'conary:python',
        'conary-repository:python',
        'conary-testenv',
        'cvs:runtime',
        'elfutils:runtime',
        'epdb:python',
        'gcc-c++:runtime',
        'genisoimage:runtime', # isoinfo, needed by addSource of iso
        'git-core:runtime',
        'gpg2:runtime',
        'info-bin:user',
        'info-daemon:user',
        'info-rmake-chroot:user',
        'info-squid:user',
        'info-sys:group',
        'libelf:devel',
        'libelf-lgpl:devel',
        'libstdc++43:devel',
        'libxml2:runtime',
        'lzma:runtime',
        'm2crypto:python',
        'mercurial:runtime',
        'netcfg:config', # we need /etc/services to be present
        'net-tools:runtime',
        'popt:devel',
        'postgresql:runtime',
        'postgresql-server:runtime',
        'python-base:devel', # Needed by distutils.sysconfig.get_config_vars in 2.6
        'python-base:runtime',
        'python-cssutils:python',
        'python-pgsql:python',
        'python-setuptools:python',
        'rpm:lib',
        'rpm:runtime',
        'sqlite:devel',
        'squid:runtime',
        'subversion:runtime',
        'timezone:data', # need to set the timezone
        'tmpwatch:runtime',
        'unzip:runtime',
        'util-linux:runtime',
        'w3c-libwww:lib',
        'webunit:python',
    ]

    if Flags.db_pgsql:
        buildRequires += [
            'postgresql:runtime',
            'postgresql-server:runtime',
          ]

    def setupSource(r):
        r.macros.repo_suffix = ''
        r.addMercurialSnapshot('http://scc.eng.rpath.com/conary-test%(repo_suffix)s')
        r.Make()

    def setupEnvironment(r):
        environ = ''
        config = {}

        # Repos DB
        config['repos_db'] = \
            Flags.db_pgsql and 'postgresql' \
            or 'sqlite'
        environ += 'CONARY_REPOS_DB=%s ' % config['repos_db']

        # Server
        config['server'] = \
            Flags.srv_apache and 'apache' \
            or Flags.srv_apache_cached and 'apachecached' \
            or 'builtin'
        if config['server'] != 'builtin':
            environ += 'CONARY_SERVER=%s ' % config['server']

        # Proxy
        config['proxy'] = \
            Flags.proxy_apache and 'apache' \
            or Flags.proxy_standalone and 'standalone' \
            or 'none'
        if config['proxy'] != 'none':
            environ += 'CONARY_PROXY=%s ' % config['proxy']

        # HTTP Proxy
        if Flags.http_proxy:
            environ += 'CONARY_HTTP_PROXY=1 '
            config['http_proxy'] = 'yes'
        else:
            config['http_proxy'] = 'no'
        if Flags.idgen_1:
            environ += 'CONARY_IDGEN=1'
            flags['idgen'] = '1'
        elif Flags.idgen_3:
            environ += 'CONARY_IDGEN=3'
            flags['idgen'] = '3'

        r.config.update(config)
        return environ + TestPackageRecipe.setupEnvironment(r)

    def install(r):
        r.install_lib()

        # Soft deps
        r.Requires(exceptDeps='python: webunit.*')
