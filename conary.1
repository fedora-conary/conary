.\" Copyright (c) 2004-2005 rPath, Inc.
.TH CONARY 1 "21 February 2005" "rPath, Inc."
.SH NAME
conary \- repository-based software configuration manager
.SH SYNOPSIS
.B conary \fIcommand \fR[\fI<args>\fR]
.SH DESCRIPTION
\fBConary\fR is a software configuration manager that uses distributed,
network-based, versioned repositories rather than disparate package
files as its canonical source of data.  Conary uses the repository
versioning to intelligently merge configuration files, file ownership
and permissions, and so forth.
.SH REFERENCE
Conary has several common command-line arguments, all of which modify 
configuration entries and are documented with other configuration
entries.  The rest of its command-line arguments are specific to
which conary \fBcommand\fP you are running, and are documented with
the commands. The \fIC\fPonary \fIv\fPersion \fIc\fPontrol program,
\fBcvc\fP, handles build and source management, and is documented in
cvc(1).
.SS "System Management"
The following \fBcommands\fP are used to install, update, erase, and
otherwise manage software installed on a local system.
.TP 4
.B query \fItrovename\fP[=\fIversion\fP][\fI<flavor>\fP]*\fP [\fI\-\-path <path>\fP]*
Lists troves installed on the local system. Any number of trove names or
absolute paths may be given.
.TP
.B update [\fIargs\fP] [+/-]<\fItrovename\fP[=\fIversion\fP][\fI<flavor>\fP]>* <\fIchangeset-file\fP>*
Updates the trove \fItrovename\fR from the appropriate repository to 
match the optional \fIversion\fP (otherwise the most recent version which 
matches the \fBinstall-label\fP) and applies the changesets contained in any
If the \fItrovename\fR is preceded by a minus, the trove is erased as part
of the operation.
\fIchange-files\fP given.
.RS 4
.TP
.B \-\-exclude-troves \fIregexp-list\fR
Any recursively-included troves whose name matches one or more of the
regular expression in (the space separated) \fIregexp-list\fR will not be
newly installed. If they are already installed, they will be updated
normally.
.TP 4
.B \-\-keep-existing
When applying a changeset, do not remove any existing versions of
the troves included in the changeset.
This will work correctly only if the versions have entirely
disjoint file sets.
The \-\-keep-existing option is normally used to add another
branch with the same trove name to the system; after that,
each branch can be updated normally.
If two versions from the same branch are
installed at the same time, this may confuse future update
operations.
.TP
.B \-\-info
Display a summary of what troves will be affected by the update.
.TP
.B \-\-just-db
The update is performed on the database, but the filesystem is not
changed.
.TP
.B \-\-no-deps
Skip dependency resolution and errors.
.TP
.B \-\-resolve
Attempt to automatically resolve all dependencies.
Can be made the default option by setting the autoResolve flag in conaryrc.
.TP
.B \-\-no-recurse
Install only the troves specified, skipping any troves they reference.
.TP
.B \-\-no-resolve
Do not resolve dependencies, only print out any dependency failures.
Unless \-\-resolve has been made the default by setting the
autoResolve flag in conaryrc, \-\-no-resolve
is the default behavior.
.TP
.B \-\-no-deps-recurse
Do not search dependencies recursively, print out only direct dependencies
of the trove.  Meaningless with \-\-resolve because dependency resolution
implies recursion.
.TP
.B \-\-replace-files
When a normal file (not a configuration file or a transient file) has
changed on the system between updates to that file, or if a file
already exists when conary tries to create it, conary normally
aborts the operation with an error message.
If you want conary to update anyway, replacing the contents
of the file with the new version from the changeset, you will need
to provide the \-\-replace-files option.
.TP
.B \-\-test
Perform all actions up to the point of writing to the filesystem.
.RE
.TP
.B erase [+/-]\fItrovename\fP[=\fRversion][\fI<flavor>\fP]\fP+
Erase all instances of \fItrovename\fP (or only a specified \fIversion\fP)
from the local system. It has the same syntax as \fBupdate\fR, but trove
names which are not preceded by a plus or minus are removed instead of
updated.
.TP
.B remove \fIpath\fP
Remove the file named \fIpath\fP from the system, and record in the
Conary database that the file has been removed.  After this, doing
\fBconary update\fP will not replace the file.  (If future versions
of the component rename the file, the removal will track the rename;
that is; if you run \fBconary remove /foo/bar\fP and \fI/foo/bar\fP
is later renamed \fI/foo/blah\fP, when you update to a version of
the component that now contains \fI/foo/blah\fP instead of
\fI/foo/bar\fP, \fI/foo/blah\fP will not be created on your system
as a new file.)
.TP
.B changeset <\fItrovename\fP[[=\fIoldver\fP\fI[<flavor>]\fP>]--[\fInewver\fP\fI[<flavor>]]\fP>]+ \fIoutfile\fP
Creates an absolute changeset for \fItrovename newver\fP, or a relative
changeset between \fItrovename oldver\fP and \fItrovename newver\fP, and stores
it in outfile.
.RS 4
.TP
.B \-\-no-recurse
Don't recursively include troves referenced by the groups and packages
listed.  Normally referenced troves which do not match troves in the
\fBexcludeList\fR are included in the changeset.
.RE
.TP
.B localcs \fItrovename outfile\fP
Creates a local changeset, which represents the changes made on the
local system to \fItrovename\fP, relative to the package as it is
represented in the repository.
.TP
.B localcommit
Applies a local changeset to the local system.  This is exactly
equivalent to making every change represented in the changeset
by hand on the local system, the locally-installed versions still
reference the repository as their source, future updates will still
come from the repository, and the changes represented in the local
changeset will be preserved as if they had been made by hand
locally.
.TP
.B commit \fIchangeset\fP [\-\-target-branch \fI<branch>\fP]
Commits a changeset to the repository.  This is not a reversible
operation, so take care.  The \fB\-\-target-branch\fP option
is only appropriate when you commit a \fBlocal changeset\fP
to a repository.
.TP
.B config  
Shows the configuration that conary will use for any 
subsequent commands executed, based on the configuration files it has 
loaded and the configuration-altering command-line options that were 
supplied.  See the \fIFILES\fP section of this manual for more information.
Arguments include
.RS 4
.TP 4
.B \-\-show-passwords
Normally, conary config will mask paswords in repository maps, to avoid their
accidental display.  You can override this masking with --show-passwords.  
.RE
.TP
.B emerge \fI<component>...\fP
Builds the recipe for the given component (which it finds by searching the
\fIinstallLabelPath\fP) onto the \fBlocalhost@local:EMERGE\fP branch
and updates the local system to the new build. Dependency checks are
not performed.
.TP
.B rblist
Lists available rollbacks.
.TP
.B rollback \fIrollback\fP [\fIargs\fP] 
Applies rollback \fIrollback\fP.  (Syntax may change in future versions
of Conary.)
Arguments include
.RS 4
.TP 4
.B \-\-replace-files
See \-\-replace-files description from \fBconary update\fP
.RE
.TP
.B repquery [\fIargs\fP] [\fItrovename\fP[=\fIversion\fP][\fI<flavor>\fP]]*
Lists troves in the repository.
Arguments include
.RS 4
.TP 4
.B \-\-all
.\" FIXME: document
.TP
.B \-\-deps
.\" FIXME: document
.TP
.B \-\-full-versions
.\" FIXME: document
.TP
.B \-\-ids
.\" FIXME: document
.TP
.B \-\-info
.\" FIXME: document
.TP
.B \-\-leaves
.\" FIXME: document
.TP
.B \-\-ls
.\" FIXME: document
.TP
.B \-\-sha1s
.\" FIXME: document
.TP
.B \-\-tags
.\" FIXME: document
.RE
.TP
.B showcs [\fIargs\fP \fI<changeset> [<trove/component>=[<version>]*]\fP
The \fBshowcs\fP command lists the contents of the provided 
\fBchangeset\fP.  If a trove is specified, and that trove is within the 
changeset, only that trove is displayed.  A component specifier, such as 
:runtime, can be given instead of a trove.  In that case, all components 
within all packages in the changeset will be displayed.

.RS 4
.TP 4
.B \-\-full-versions
Does not attempt to shorten version strings for display
.\" FIXME: add semantics
.TP
.B \-\-deps
Displays provides and requires information about the troves in the changeset.
.TP
.B \-\-ls
Lists the files in the changeset
.TP
.B \-\-show-changes
For files that have been modified, lists the old version of the file above the
new version of the file for easy comparison.   Only has an effect if --ls
is specified.  
.TP
.B \-\-tags
Show any files in the changeset that have tags.
.RE
.TP
.B verify [--all] \fI<trove>[=version]*\fP
Compares the files in the given \fItrove\fP (or all troves if the --all 
option if given) against the trove files as they were  at the time of install,
and displays any differences.
.\"
.\"
.\"
.SH JARGON
Conary introduces new concepts and makes new distinctions.
.TP 4
.B Repository
A network-accessible database that contains files for multiple packages,
and multiple versions of these packages, on multiple development branches.
Nothing is ever removed from the repository once it has been added.
.TP
.B Files
Conary tracks files by unique file identifier rather than path name.
(This allows Conary to track changes to file names.)  A reference to
a \(lqfile\(rq is not a reference to a path name, but rather to the
file referenced by the unique file identifier.
.TP
.B Troves
Every collection kept in a repository is generically called a
\fBtrove\fP.  A trove can contain either files or other troves.
.TP
.B Packages and Components
\fBPackages\fP contain logically-connected collections of files.
The files are grouped into \fBcomponents\fP, and the components
are grouped into packages.  Components have a package name, a
\fB:\fP character, and a component suffix; for example:
\fBconary:runtime\fP.
.IP
Not all components are part of a package.  Some components, such
as those with a \fBsource\fP or \fBtest\fP suffix, are independent
components that are related to but not included in a package.
.TP
.B Groups and Filesets
A \fBGroup\fP is an arbitrary collection of other troves, and its
name starts with \fBgroup-\fP.  A \fBFileset\fP is an arbitrary
collection of files, and its name starts with \fBfileset-\fP.
.TP
.B Labels, Versions, and Branchnames
Conary version strings are a \fB/\fP-separated sequence, normally 
\fB/\fP-prefixed, of specifiers of the form
\(lq\fI<label>[\fB/\fI<version>\fB-\fI<release>]\fR\(rq, and
a \fI<label>\fR follows the form
\(lq\fI[<repository>]\fB@\fI[<namespace>\fB:\fI]<tag>\fR\(rq.
A version string is \fBfully-qualified\fP if it is \fB/\fP-prefixed.
The \fI<namespace>\fB:\fI<tag>\fR pair is generally seen together,
and is called a \fBBranchname\fP.
.RS 4
.TP 4
\f(BI<version>\fP
The upstream version of the package
.TP
\f(BI<release>\fP
A \fI<release>\fP is a \fI<sourcecount>\fP-\fI<binarycount>\fP pair
of numbers, where \fI<sourcecount>\fP specifies the source package
the binary came from, and \fI<binarycount>\fP tells which build of the
sources is being installed. Source packages have release numbers which
exclude the -\fI<binarycount>\fP portion. When new versions of a package
are cooked, conary will increment the \fI<binarycount>\fP portion of
the release number.
.TP
\f(BI<tag>\fP and \fBbranch string\fP
\fI<tag>\fP is a simple string that is unique within a namespace.
A \fBbranch string\fP is a fully-qualified version string without a
trailing \fI<version>\fP-\fI<release>\fP pair.
.TP
\f(BI<label>\fP
A \fI<label>\fP does not include any leading \fB/\fP character, and
has the special property of being able to apply to more than one
branch at once.  Therefore, \fBconary.example.com@local:foo\fP might
refer to \fIboth\fP of the following at once:
.br
.B /conary.example.com@local:bar/conary.example.com@local:foo
.br
.B /conary.example.com@local:foo
.br
A label applies to any branch whose name ends with the label.
.RE
.TP
.B Flavors
A single version of a source component can be built many times
with different configurations and for different architectures.
Each of these different builds is called a flavor.  The flavor
is determined by the base instruction set (e.g. \fBx86\fP,
\fBx86_64\fP, \fBppc\fP, \fBppc64\fP, etc.), any extra instruction
set features (e.g. \fBmmx\fP, \fBcmov\fP, \fBsse\fP, \fB3dnow\fP),
and the flags that the recipe was cooked with, both sytem-wide
flags (e.g. \fBnptl\fR, \fBbuilddocs\fP, \fBpam\fP) and package-specific
flags (e.g. \fBkernel.smp\fP, \fBglibc.tls\fP).
.IP
Flavors are
specified within literal \fB[\fP and \fB]\fP characters, first
the flags (if any), optionally prefixed by a literal \fB!\fP character
to invert their sense, then the instruction set specified as a
literal \fBis:\fP followed by the base instruction set, and then
any extra instruction set features within literal \fB(\fP and \fB)\fP
characters.  Examples include
.br
.B [nptl,!builddocs is:x86(sse)]
.br
.B [!kernel.smp]
.br
.B [is: x86_64]
.RE
.TP
.B Changesets
A \fBchangeset\fP is a representation of the changes between two versions
(a \fBrelative changeset\fP) or the change between nil and a version
(an \fBabsolute changeset\fP).  Changesets are used internally as the
main form of communication between the Conary client and the repository,
and can also live independently as files.
.\"
.\"
.\"
.SH FILES
.\" do not put excess space in the file list
.PD 0
.TP 4
.I /etc/conaryrc
.TP
.I $HOME/.conaryrc
.TP
.I ./conaryrc
The configuration files for Conary; entries in \fI./conaryrc\fP
override entries in \fI$HOME/.conaryrc\fR, which override entries
in \fI/etc/conaryrc\fR.  Command-line options
(including the \fB\-\-config\fR option, which allows you to override
one line in the config file, and the \-\-config-file option, which 
reads in an additional, supplied config file) override all 
configuration files.  Conary configuration items can be strings,
booleans (\fBTrue\fP or \fBFalse\fP), or mappings (\f(BIto from\fP) and
can include:
.PD
.RS 4
.TP 4
.B autoResolve
If autoResolve is True, the conary update command will automatically
resolve dependencies (unless the \-\-no-resolve option is provided).
If it is false, the conary update command will not
resolve dependencies, unless the \-\-resolve option is provided.
The autoResolve option is False by default.
.TP
.B buildLabel
The default label for troves during source code operations
(checkout, diff, etc) and for cooking.  Can be overridden by
the \fB\-\-build-label \fI<label>\fR command-line option.
.TP
.B buildFlavor
The flavor that Conary will use when building troves.  This flavor
will be used when no flavor is specified in group and fileset
recipes.  
.\" FIXME: add It is also used to set the values of Use and Arch flags
.\" when building (once conary actually does this)
.TP
.B buildPath
The path packages are built under; default \fI/usr/src/conary/builds
.TP
.B contact
The contact name (normally an email address or URL) to put in changelog
entries when committing changes to source components.
.TP
.B dbPath
The path to the Conary database on the local system.  It is relative
to \fBroot\fP (see below) and should normally not be changed.
.TP
.B flavor
The flavor that Conary will use to find troves to install when the
trove is not yet installed on the system.  It is specified using the
same syntax as flavors are specified on the command line.
.\" FIXME: document how flavors are specified on the command line.
.TP
.B installLabelPath
The ordered path of labels to use when an incomplete version is
specified to install package, query the repository, and abbreviate
versions when displaying them.
Can be overridden by the \fB\-\-install-label \fI<label>\fR command-line option.
.TP
.B lookaside
The transient lookaside cache used only during building, normally
\fI/var/cache/conary\fR
.TP
.B name
The name used in changelog entries when committing changes to source
components.
.TP
.B repositoryMap
Maps a hostname from a label to a full URL for a networked repository.
Multiple maps can be given for a single label. (If no mapping is found,
\fBhttp://\f(BIhostname\fB/conary/\fR is used as the default map.)
.TP
.B root
The path to install files into, normally \fI/\fR.
Can be overridden by the \fB\-\-root \fI<root>\fR command-line option.
.TP
.BR "Use.<useflag> " or " Arch.<archflag> " or " Flags.<package>.<packageflag>"
Assigns the given boolean value to the flag. 
Can be overridden by the \fB\-\-use-flag \fI"<flag> <bool>"\fR command-line option.
.TP
.B Macros.<macro>
Assigns the given string to <macro>, for use in cooking.  Useful especially for setting march, os, target, and parallelmflags.
Can be overridden by the \fB\-\-use-macro \fI"<macro> <value>"\fR command-line option.  Note that all values are assumed to be strings -- no quotes are necessary around <value> on the command line or in the config file.
.TP
.B includeConfigFile
Immediately reads the listed configuration file.  The file name may include
shell globs, in which case all files matching the glob will be read in.
.RE
.TP 4
.I /etc/conary
Contains all local configuration for Conary except for the conaryrc file.
.TP
.I /etc/conary/tags/
Tagdescription files describing dynamic tags.
.\" FIXME: need a man page describing the tagdescription file format.
.TP
.I /usr/libexec/conary/tags/
Taghandler files implementing dynamic tags.
.\" FIXME: need a man page describing the taghandler calling convention.
.TP
.I /var/lib/conarydb/conarydb
The database file containing all the local system metadata.
.TP
.I /var/lib/conarydb/contents
Original file contents of configuration files Conary tracks.
.TP
.I /var/lib/conarydb/rollbacks
Changeset files representing rollbacks (listed via \fBconary
rblist\fP).
.I /etc/conary/arch
Directory containing architecture definition files.
.\" FIXME: need a man page describing architecture definition files
.I /etc/conary/use
Directory containing use flag definition files.
.\" FIXME: need a man page describing use flag definition files
.\"
.\"
.\"
.SH BUGS
There are no bugs, only undocumented features.  You can report
undocumented features at http://bugs.rpath.com/
.\"
.\"
.\"
.SH "SEE ALSO"
cvc(1)
.br
cvcdesc(1)
.br
http://www.rpath.com/
.br
http://wiki.conary.com/
.br
http://www.rpath.com/technology/conary.html
.I An Introduction to the Conary Software Provisioning System
.br
http://www.rpath.com/technology/techoverview/
.I Repository-based System Management Using Conary
